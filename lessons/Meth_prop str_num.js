'use strict';

//  => Методы и свойства строк и чисел
// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String

// Методы - ето вспомагатнльные функции. В конце метода обезательно ставить () так как они выполняют действие над строкой
// Свойства - ето вспомагательные значения


// Свойства строки 
const str = 'test';  // Переменная с строкой
console.log(str.length);  // Ствойство. Количество символов которые в нутри строки (или других типов данных)
// Свойства вызывать не нужно. Мы их пишеи просто через точку. (str.length)


const arr = [1, 2, 4];  // Массив с данными
console.log(arr.length);  // Ствойство. Количество елементов в нутри масива (три - 3шт.)


const str1 = 'test';
console.log(str1[2]); // (str1[2]) индекс 2 выводит третий символ попорядку "s"
console.log(str[2] = 'd'); // так заменить символ невозможно. Такое меняется через методы 




//// метод изминения регистра
const str2 = 'test';
console.log(str2.toUpperCase()); // Метод изминения строки на верхний регистр => .toUpperCase()
// не изменяет старую строку, а делает новое значение
// в консоли выведется "TEST"

const str3 = 'teSt';
console.log(str3.toLocaleLowerCase()); // Метод изминяет строку в нижний регистр => .toLocaleLowerCase()
// в консоли выведется "test"

const fruit = 'Some fruit';
console.log(fruit.indexOf('fruit')); // Метод => .indexOf и должен принимать в себя аргумент
// ищем кусочик в строке и узнаем с какого индекса он начинается
// В консоле выводится => 5 
// Иногда этот метод используют чтобы узнать есть ли в строке искомое значение

const fruit1 = 'Some fruit';
console.log(fruit1.indexOf('Hallo')); // Когда куска в строке не найдено
// В консоле выводится => -1



//// Модифткация (вырезания части из) строки №1
const logg = 'Hello world';
console.log(logg.slice(6, 11)); // Метод => .slice(говорим что мы хотим вернуть из этой стоки) 
// синтаксес => ( Задаем - Перрвый: с какой части строки необходимо возвращать чтото (вырезать))
// синтаксес => ( Задаем - Второй: где нужно заканчивать возвращать чтото (вырезать). До какогото момента но не включая
// В консоль выведеться => world
// console.log(logg.slice(6));
// Если указать только один аргумент то будет вырезатся все начиная с индекса который мы указали и до конца строки

const logg1 = 'Hello world';
console.log(logg1.slice(-5, -1)); // вырезние с конца строки но без последнего символа
// В консоль выведеться => worl



//// Модифткация (вырезания части из) строки №2
const logg2 = 'Hello world';
console.log(logg2.substring(11, 6));  // Метод => .substring Похож на .slice на он не поддерживает отрицатильные значения
// и первый аргумент может быть больше чем вторй
// В консоль выведеться => world



//// Модифткация (вырезания части из) строки №3
const logg3 = 'Hello world';
console.log(logg3.substr(6, 5)); // Метод => .substr говорит сколько символов нужно вырезать
// Первый: аргумент указывает с какой части строки начать вирезание
// Второй: аргумент сколько символов нужно вырезать 
// В консоль выведеться => world



// Методы для чисел можна посмотреть в библиотеке в console набрав => Math.



//// Метод для округления Math.round()
const num = 12.2; // Число
console.log(Math.round(num)); // Округление до целого числа. => Math.round(num)
// В консоль выведеться => 12



//// Метод преобразования строк в числа parseInt()
const test = '12.2px'; // Строка 
console.log(parseInt(test));  // => parseInt(занимается тем что переводит число в другую систему изчисления)
// => parseInt(test) передаем строку и получаем целое число обрезаное от букв и десятичных
// Использование не по назначению, так как изначально он меняет системы изчислений. На практите его часто используют для превращения строк в числа
// В консоль выведеться => 12



//// Метод преобразования строк в числа parseFloat()
const test1 = '12.2px'; // Строка 
console.log(parseFloat(test1));  // => parseFloat переводит в десятичное значение с дробными
// => parseFloat(test1) переводит строку и в десятичное значение получаем число обрезаное от на с десятичными значениями
// На практите его часто используют для превращения строк в числа
// В консоль выведеться => 12.2







