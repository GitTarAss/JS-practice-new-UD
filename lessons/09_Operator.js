'use strict'; // Режим сучасного кода!

console.log('arr' + " - object"); // Конкатенация и выведется строка => arr - object
console.log(4 + " - object"); // Конкатенация всеравно строка => 4 - object
console.log(4 + +" - object"); // В консоли выведется = > NaN <= не числа (Not-A-Number)
console.log(4 + +"5"); // В консоли выведется уже не строка а число => 9 , так как +перед (Унарный плюс) строкой меняет ее на число (если конечно там цыфры а не буквы)

//////////////////////////////////////////////////
let a = 1, b = 1; // Префисная и постфиксная форма 

console.log( ++a ); // 2, префиксная форма возвращает новое значение
console.log( b++ ); // 1, постфиксная форма возвращает старое значение

console.log( a ); // 2, значение увеличено один раз
console.log( b ); // 2, значение увеличено один раз

//////////////////////////////////////////////////
let incr = 10, // Вариант 2 - Префисная и постфиксная форма
    decr = 10; 

/*
incr++; // +1 к числу постфиксная форма
decr--; // -1 от чтсла постфиксная форма
*/
/*
++incr; // +1 к числу префиксная форма
--decr; // -1 от чтсла префиксная форма
*/
/*
console.log(incr); // В консоли выведется => 11
console.log(decr); // В консоли выведется => 9
*/
incr;
decr;
// префиксная форма
/*
console.log(++incr); // Сразу выводит новое значение в консоли => 11
console.log(--decr); // Сразу выводит новое значение в консоли => 9
*/
//постфиксная форма
console.log(incr++); // Возвращает старое значение В консоли выведется => 10 и только при следующем запросе добавляет +1
console.log(decr--); // Возвращает старое значение В консоли выведется => 10 и только при следующем запросе отнимает -1
console.log(incr); // В консоли выведется => 11
console.log(decr); // В консоли выведется => 9

/////////////////////////////////////////////////

console.log(5%2); // Оператор % - возвращает остаток от деления двух чисел. В консоль выведется => 1

/////////////////////////////////////////////////

// Операторы равенства:
// = Присвоить => let a = 1;

console.log(2*4 == 8); // Сравниваем 2*4 РАВНО 8 В консоле выведется => true
console.log(2*4 == '8'); // Сравниваем 2*4 РАВНО '8'(уже строка а не число). В консоле выведется => true так как мы сравниваем по ЗНАЧЕНИЮ а не по типу данных
console.log(2*4 === '8'); // Сравниваем 2*4 СТРОГО РАВНО '8'(строка а не число) не только по значению но и по типу данных. В консоле выведется => false 

////////////////////////////////////////////////
// Операторы "И && " "ИЛИ || "

// && - работает только тогда, когда минимум два значения являются => true (и это правда и это правда)
// || - работает когда хотя бы одно значение правда => true (или это правда или другое правда)
/*
const isChecked = true,
      isClose = true;

console.log(isChecked && isClose); //В консоль выедется => true
*/
/*
const isChecked = true,
      isClose = false;

console.log(isChecked && isClose); //В консоль выедется => false
*/
/*
const isChecked = true,
      isClose = false;

console.log(isChecked || isClose); //В консоль выедется => true
*/
///////////////////////////////////////////////
// Оператор - Логическое отрицание ' ! '
// ! - Обращает значение в обратное 

/*
const isChecked = true,
      isClose = false;

console.log(isChecked || isClose); //В консоль выедется => true
*/
const isChecked = true,
      isClose = false;

console.log( !isChecked || isClose ); //В консоль выедется => false так как isChecked = true, превращается в !isChecked  = false

console.log(2 + 2 * 2 !== 8); //В консоль выедется => true так как '6' не равно '8'

// Приоритет операторов https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence





